<UserControl x:Class="SistemaGestion.View.VentasView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:local="clr-namespace:SistemaGestion.View"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="900">
    <!--#region ESTILOS-->
    <UserControl.Resources>
        <!-- Estilo Moderno para Botones -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#34495e"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                            CornerRadius="4"
                            SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#2c3e50"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#2c3e50"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Estilo Moderno para el DataGrid -->
        <Style x:Key="ModernDataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="#34495e"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="RowBackground" Value="#34495e"/>
            <Setter Property="AlternatingRowBackground" Value="#3b566e"/>
            <Setter Property="BorderBrush" Value="#2c3e50"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#2c3e50"/>
            <Setter Property="VerticalGridLinesBrush" Value="#2c3e50"/>
        </Style>

        <!-- Estilo para los Encabezados del DataGrid -->
        <Style x:Key="ModernDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#2c3e50"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <!--#Estilo para botones Registrar y cancelar -->
        <Style x:Key="BotonesRedondos" TargetType="Button">
            <Setter Property="Background" Value="#134f5c"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="Azure"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" 
                                      VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <!--#endregion-->



    <Grid Background="#2C3E50" Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <!-- Columna principal (flexible) y Columna derecha (fija) para el Resumen -->
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="230"/>
        </Grid.ColumnDefinitions>

        <!-- Sección izquierda - Formulario de Venta -->
        <StackPanel Grid.Row="0" Grid.Column="0" Margin="10" VerticalAlignment="Top">
         <TextBlock Text="Modulo Ventas" FontSize="20" FontWeight="Bold" Margin="0,0,0,10" 
                       Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Top"/>
        <!--#region BUSQUEDA CLIENTES-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <TextBlock Text="Cliente" Foreground="White" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <TextBox Width="200" Text="{Binding FiltroCliente, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Style="{StaticResource ModernButtonStyle}" Width="40" Margin="5,0,0,0"
            Command="{Binding BuscarClienteCommand}">
                    <fa:IconImage Icon="Search" Height="16" Width="16" Foreground="White"/>
                </Button>
                <CheckBox Content="Consumidor Final" Margin="10,0,10,0" Foreground="White"
                          IsChecked="{Binding EsConsumidorFinal, Mode=TwoWay}"/>
            </StackPanel>
            <DataGrid Height="100" AutoGenerateColumns="False" Margin="0,5,0,10" Width="280" HorizontalAlignment="Left"
                      Style="{StaticResource ModernDataGridStyle}"
                      ColumnHeaderStyle="{StaticResource ModernDataGridColumnHeaderStyle}"
                      ItemsSource="{Binding ListaClientes}"
                      IsReadOnly="True"
                      SelectedItem="{Binding SelectedCliente, Mode=TwoWay}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="Auto"/>
                    <DataGridTextColumn Header="Nombre" Binding="{Binding Nombre}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>


            <!--#endregion-->
        <!--#region BUSQUEDA PRODUCTOS-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                <!-- Busqueda de Producto -->
                <TextBlock Text="Producto" Foreground="White" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <TextBox Width="200" Text="{Binding FiltroProducto, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Style="{StaticResource ModernButtonStyle}" Width="40" Margin="5,0,0,0" 
                        Command="{Binding BuscarProductoCommand}">
                    <fa:IconImage Icon="Search" Height="16" Width="16" Foreground="White"/>
                </Button>
            </StackPanel>

            <!-- DataGrid para mostrar los resultados de la búsqueda de productos -->
            <DataGrid Height="100" AutoGenerateColumns="False" IsReadOnly="True" Margin="0,5,0,10" Width="280" HorizontalAlignment="Left"
                      Style="{StaticResource ModernDataGridStyle}"
                      ColumnHeaderStyle="{StaticResource ModernDataGridColumnHeaderStyle}"
                      ItemsSource="{Binding ListaProductos}"
                      SelectedItem="{Binding ProductoSeleccionado, Mode=TwoWay}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="Auto"/>
                    <DataGridTextColumn Header="Nombre" Binding="{Binding Nombre}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>

            <!-- Botón para agregar el producto seleccionado -->
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                <!-- Botón Agregar Producto -->
                <Button Style="{StaticResource ModernButtonStyle}" 
            Content="Agregar Producto" 
            Width="125" 
            HorizontalAlignment="Left"
            Margin="5,0,0,0"
            Command="{Binding AgregarProductoCommand}"/>

                <!-- Botón Eliminar Producto -->
                <Button Style="{StaticResource ModernButtonStyle}"
            Content="Eliminar Producto"
            Width="125"
            HorizontalAlignment="Left"
            Margin="5,0,0,0"
            Command="{Binding EliminarDetalleCommand}"/>
            </StackPanel>


            <!--#endregion-->
        </StackPanel>


        <!--#region DATA GRID DETALLE VENTA-->
        <!-- Tabla de Productos en Venta con estilo y columnas definidas -->
        <DataGrid Grid.Row="2"
                  Margin="0,5,0,0"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Top"
                  Style="{StaticResource ModernDataGridStyle}"
                  ColumnHeaderStyle="{StaticResource ModernDataGridColumnHeaderStyle}"
                  AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  IsReadOnly="False"
                  RowEditEnding="DataGrid_RowEditEnding"
                  ItemsSource="{Binding Venta.Detalles}"
                  SelectedItem="{Binding DetalleSeleccionado, Mode=TwoWay}"
                  Height="100"
                  Width="700">

            <DataGrid.Columns>
                <!-- ID (no editable) -->
                <DataGridTextColumn Header="ID" 
                    Binding="{Binding DetalleVentaId}" 
                    Visibility="Collapsed"
                    Width="50" 
                    IsReadOnly="True"/>

                <!-- Nombre del producto (no editable) -->
                <DataGridTextColumn Header="Nombre Producto" 
                    Binding="{Binding NombreProducto}" 
                    Width="*" 
                    IsReadOnly="True"/>

                <!-- Cantidad (editable) -->
                <DataGridTextColumn Header="Cantidad" Width="60" IsReadOnly="False">
                    <DataGridTextColumn.Binding>
                        <Binding Path="Cantidad" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="TextBox">
                            <!-- Aquí no establecemos UpdateSourceTrigger -->
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>



                <!-- Precio Unitario (no editable) -->
                <DataGridTextColumn Header="P. Unit." 
                    Binding="{Binding PrecioUnitario, StringFormat=C}" 
                    Width="80" 
                    IsReadOnly="True"/>

                <!-- Total (calculado, no editable) -->
                <DataGridTextColumn Header="Total" 
                    Binding="{Binding ImporteTotal, StringFormat=C}" 
                    Width="80" 
                    IsReadOnly="True"/>
            </DataGrid.Columns>
        </DataGrid>

        <!--#endregion-->
        <!--#region RESUMEN VENTA PANEL DERECHO-->
        <Border Grid.Row="0" Grid.RowSpan="3" Grid.Column="1"
        Background="#34495E" CornerRadius="10" Margin="20,0,20,0" Padding="20"
        Height="330" VerticalAlignment="Top">
            <StackPanel>
                <!-- Total de la venta (binding a la propiedad Total) -->
                <TextBlock Text="{Binding Total, StringFormat='Total Venta: {0:C2}'}"
                   FontSize="16" FontWeight="Bold" Foreground="White"/>

                <!-- Documento (por ahora está fijo, podrías enlazar a una propiedad si lo deseas) -->
                <StackPanel Orientation="Horizontal" Margin="0,5,0,2" VerticalAlignment="Center">
                    <fa:IconImage Icon="FileContract" Width="16" Height="16" Foreground="White" Margin="0,0,5,0"/>
                    <TextBlock Text="Documento" Foreground="White" />
                </StackPanel>
                <ComboBox>
                    <ComboBoxItem Content="Comprobante"/>
                </ComboBox>

                <!-- Tipo de pago (también fijo por ahora) -->
                <StackPanel Orientation="Horizontal" Margin="0,5,0,2" VerticalAlignment="Center">
                    <fa:IconImage Icon="MoneyBill1" Width="16" Height="16" Foreground="White" Margin="0,0,5,0"/>
                    <TextBlock Text="Tipo Pago" Foreground="White" />
                </StackPanel>
                <ComboBox>
                    <ComboBoxItem Content="Efectivo"/>
                </ComboBox>

                <!-- Serie (aún fija, podrías enlazar a una propiedad) -->
                <TextBlock Text="Serie" Margin="0,10,0,0" Foreground="White"/>
                <TextBox Text="0003"/>

                <!-- Efectivo Recibido: enlazado a PagoCliente en modo TwoWay -->
                <TextBlock Text="Efectivo Recibido" Margin="0,10,0,0" Foreground="White"/>
                <TextBox Text="{Binding PagoCliente, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <!-- CheckBox para Efectivo Exacto: enlazado a EfectivoExacto -->
                <CheckBox Content="Efectivo Exacto"
                  IsChecked="{Binding EfectivoExacto, Mode=TwoWay}"
                  Foreground="White"
                  Margin="0,5,0,0"/>

                <!-- Vuelto: se calcula en el ViewModel (Vuelto = PagoCliente - Total, o 0 si EfectivoExacto) -->
                <TextBlock Text="{Binding Vuelto, StringFormat='Vueltos: {0:C2}'}"
                   FontWeight="Bold" Margin="0,10,0,0" Foreground="White"/>

                <!-- Subtotal: suma de importes de los detalles -->
                <TextBlock Text="{Binding Subtotal, StringFormat='SUBTOTAL: {0:C2}'}" Foreground="White"/>
                <!-- IVA al 15% -->
                <TextBlock Text="{Binding IVA, StringFormat='IVA (15%): {0:C2}'}" Foreground="White"/>
                <!-- Total: Subtotal + IVA -->
                <TextBlock Text="{Binding Total, StringFormat='TOTAL: {0:C2}'}"
                   FontWeight="Bold" Foreground="White"/>
            </StackPanel>
        </Border>

        <!--#endregion-->

        

        <!-- Botones Finales -->
        <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10" VerticalAlignment="Bottom">
            <Button Style="{StaticResource BotonesRedondos}" 
            Content="Registrar Venta" 
            Width="150" Height="40" Margin="5"
            Command="{Binding RegistrarVentaCommand}"/>
            <Button Style="{StaticResource BotonesRedondos}" 
            Content="Cancelar" 
            Width="150" Height="40" Margin="5"
            Command="{Binding  CancelarVentaCommand}"/>
        </StackPanel>

    </Grid>
</UserControl>
